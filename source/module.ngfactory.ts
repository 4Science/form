/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './module';
import * as import2 from '@angular/forms/src/directives';
import * as import3 from '@angular/forms/src/form_providers';
import * as import4 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import5 from '@angular/forms/src/form_builder';
import * as import6 from './form-store';
import * as import7 from '@angular/core/src/di/injector';
import * as import8 from 'ng2-redux/lib/components/ng-redux';
class NgReduxFormsInjector extends import0.NgModuleInjector<import1.NgReduxForms> {
  _InternalFormsSharedModule_0:import2.InternalFormsSharedModule;
  _FormsModule_1:import3.FormsModule;
  _ReactiveFormsModule_2:import3.ReactiveFormsModule;
  _NgReduxForms_3:import1.NgReduxForms;
  __RadioControlRegistry_4:import4.RadioControlRegistry;
  __FormBuilder_5:import5.FormBuilder;
  __FormStore_6:import6.FormStore;
  constructor(parent:import7.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _RadioControlRegistry_4():import4.RadioControlRegistry {
    if ((this.__RadioControlRegistry_4 == null)) { (this.__RadioControlRegistry_4 = new import4.RadioControlRegistry()); }
    return this.__RadioControlRegistry_4;
  }
  get _FormBuilder_5():import5.FormBuilder {
    if ((this.__FormBuilder_5 == null)) { (this.__FormBuilder_5 = new import5.FormBuilder()); }
    return this.__FormBuilder_5;
  }
  get _FormStore_6():import6.FormStore {
    if ((this.__FormStore_6 == null)) { (this.__FormStore_6 = new import6.FormStore(this.parent.get(import8.NgRedux))); }
    return this.__FormStore_6;
  }
  createInternal():import1.NgReduxForms {
    this._InternalFormsSharedModule_0 = new import2.InternalFormsSharedModule();
    this._FormsModule_1 = new import3.FormsModule();
    this._ReactiveFormsModule_2 = new import3.ReactiveFormsModule();
    this._NgReduxForms_3 = new import1.NgReduxForms();
    return this._NgReduxForms_3;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_0; }
    if ((token === import3.FormsModule)) { return this._FormsModule_1; }
    if ((token === import3.ReactiveFormsModule)) { return this._ReactiveFormsModule_2; }
    if ((token === import1.NgReduxForms)) { return this._NgReduxForms_3; }
    if ((token === import4.RadioControlRegistry)) { return this._RadioControlRegistry_4; }
    if ((token === import5.FormBuilder)) { return this._FormBuilder_5; }
    if ((token === import6.FormStore)) { return this._FormStore_6; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const NgReduxFormsNgFactory:import0.NgModuleFactory<import1.NgReduxForms> = new import0.NgModuleFactory(NgReduxFormsInjector,import1.NgReduxForms);